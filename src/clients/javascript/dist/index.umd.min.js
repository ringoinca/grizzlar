!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).Pizzly=e()}(this,(function(){"use strict";class t{constructor(t,i,o,s){if(this.status=e.IDLE,!t)throw new Error("Couldn't connect. Missing argument: integration (string)");if(!window)throw new Error("Couldn't connect. The window object is undefined. Are you using connect from a browser?");this.integration=t,this.options=i,this.key=o,this.origin=s}trigger(){const t=this.toQueryString(this.key,this.options),o=new URL("/auth/"+this.integration+(t?"?"+t:""),this.origin).href;return new Promise((t,s)=>{const n=i=>{if(this.status!==e.BUSY)return;if(i&&new URL(i.origin).origin!==new URL(this.origin).origin)return;if(this.status=e.DONE,!i){return s(new Error("Authorization cancelled. The user has likely interrupted the process by closing the modal."))}if(!i.data||!i.data.eventType){return s(new Error("Authorization failed. The authorization modal sent an unsupported MessageEvent."))}const{data:o}=i;return"AUTHORIZATION_SUCEEDED"===o.eventType?t(o.data):"AUTHORIZATION_FAILED"===o.eventType?s(o.data):void s(new Error("Authorization failed. Thatâ€™s all we know."))};window.addEventListener("message",n,!1),this.status=e.BUSY;const r=new i(o);r.open(),r.addEventListener("close",n)})}toQueryString(t,e){let i=[];if(t&&"string"==typeof t&&i.push("pizzly_pkey="+t),e&&"string"==typeof e.authId&&i.push("authId="+e.authId),e&&"string"==typeof e.setupId&&i.push("setupId="+e.setupId),e&&void 0!==e.params)for(const t in e.params){const o=e.params[t];"string"==typeof o&&i.push(`params[${t}]=${o}`)}return i.join("&")}}var e;!function(t){t[t.IDLE=0]="IDLE",t[t.BUSY=1]="BUSY",t[t.DONE=2]="DONE"}(e||(e={}));class i{constructor(t){this.width=500,this.height=600,this.url=t;const{left:e,top:i,computedWidth:o,computedHeight:s}=this.layout(this.width,this.height);this.features={width:o,height:s,top:i,left:e,scrollbars:"yes",resizable:"yes",status:"no",toolbar:"no",location:"no",copyhistory:"no",menubar:"no",directories:"no"}}layout(t,e){const i=window.screen.width,o=window.screen.height,s=i/2-t/2,n=o/2-e/2,r=Math.min(t,i),h=Math.min(e,o);return{left:Math.max(s,0),top:Math.max(n,0),computedWidth:r,computedHeight:h}}open(){const t=this.url,e=this.featuresToString();return this.modal=window.open(t,"",e),this.modal}addEventListener(t,e){if("close"!==t)return;if(!this.modal)return void e();const i=window.setInterval(()=>{this.modal&&!this.modal.closed||(e(),window.clearInterval(i))},100)}featuresToString(){const t=this.features,e=[];for(let i in t)e.push(i+"="+t[i]);return e.join(",")}}class o{constructor(t,e,i,s){this.options={},this.auth=t=>new o(this.integration,Object.assign(Object.assign({},this.options),{authId:t}),this.key,this.origin),this.setup=t=>new o(this.integration,Object.assign(Object.assign({},this.options),{setupId:t}),this.key,this.origin),this.get=(t,e)=>this.request("GET",t,e),this.head=(t,e)=>this.request("HEAD",t,e),this.post=(t,e)=>this.request("POST",t,e),this.put=(t,e)=>this.request("PUT",t,e),this.delete=(t,e)=>this.request("DELETE",t,e),this.patch=(t,e)=>this.request("PATCH",t,e),this.request=(t,e,i={})=>{if(i&&"object"!=typeof i)throw new Error('Unable to trigger API request. Request parameters should be an object in the form "{ headers: { "Foo": "bar" }, body: "My body" }');const o={"Pizzly-Auth-Id":this.options.authId,"Pizzly-Setup-Id":this.options.setupId};if(i&&i.headers)for(const t in i.headers)o["Pizzly-Proxy-"+t]=i.headers[t];const s=this.toURL(this.origin,"/proxy/"+this.integration,e,this.key,i.query);return(0,window.fetch)(s.toString(),{method:t,headers:this.cleanHeaders(o),body:i&&i.body})},this.integration=t,this.options=e,this.origin=s,this.key=i}connect(e){const i=Object.assign(Object.assign({},this.options),e||{});return new t(this.integration,i,this.key,this.origin).trigger()}toURL(t,e,i,o,s){const n=t=>t.replace(/^\//,""),r=t=>t.replace(/\/$/,""),h=[];h.push(r(t)),h.push(n(r(e))),h.push(n(i));const a=new URL(h.join("/"));return o&&a.searchParams.append("pizzly_pkey",o),s&&Object.keys(s).forEach(t=>a.searchParams.append(t,String(s[t]))),a}cleanHeaders(t){return Object.keys(t).reduce((e,i)=>(void 0!==t[i]&&(e[i]=t[i]),e),{})}}return class{constructor(t,e){if(this.key="",this.origin="",!window){throw new Error("Couldn't initialize Pizzly. The window object is undefined. Are you using Pizzly from a browser?")}if(t&&"string"==typeof t&&(this.key=t),e&&"string"==typeof e)this.origin=new URL(e).href;else if(e&&"object"==typeof e){const t=e.protocol||window.location.protocol,i=e.port||window.location.port||80,o=e.hostname||window.location.hostname;this.origin=new URL(t+"//"+o+":"+i).href}if(!this.origin){const e="object"==typeof t&&t.host;if(e)if(e.startsWith("http://")||e.startsWith("https://"))this.origin=new URL(e).href;else{const t=window.location.protocol;this.origin=new URL(t+"//"+e).href}else{const t=window.location.protocol,e=window.location.hostname,i=window.location.port||80,o=e+(80!==Number(i)?":"+i:"");this.origin=new URL(t+"//"+o).href}}if(!this.key){const e="object"==typeof t&&t.publishableKey;e&&(this.key=e)}return this}connect(e,i){return new t(e,i||{},this.key,this.origin).trigger()}integration(t,e){return new o(t,e||{},this.key,this.origin)}}}));